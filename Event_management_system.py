# -*- coding: utf-8 -*-
"""Event Management System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VQewJdR9eP_VrMp0FOcIkRtp-mF56co1

"Event Management System"
"""

import csv
from datetime import datetime, timedelta
import os  # To check file existence


# Helper Functions
def file_exists(file_path):
    """Check if a file exists."""
    return os.path.exists(file_path)


# Core Functions
def create_event(event_name, event_date, location, description):
    with open('events.csv', mode='a', newline='') as file:
        writer = csv.writer(file)
        writer.writerow([event_name, event_date, location, description])
    print(f"Event '{event_name}' created successfully!")


def read_events():
    if not file_exists('events.csv'):
        print("No events found. Start by creating an event.")
        return

    with open('events.csv', mode='r') as file:
        reader = csv.reader(file)
        events = list(reader)

        if not events:
            print("No events available.")
            return

        print("\nEvents:")
        print("-" * 95)
        for event in events:
            print(f"{event[0]:<25} {event[1]:<20} {event[2]:<20} {event[3]:<30}")


def delete_event(event_name):
    if not file_exists('events.csv'):
        print("No events file found.")
        return

    with open('events.csv', mode='r') as file:
        reader = csv.reader(file)
        events = [row for row in reader if row[0] != event_name]

    with open('events.csv', mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerows(events)

    print(f"Event '{event_name}' deleted successfully!")


def add_attendee(event_name, attendee_name, email, rsvp_status):
    with open(f'{event_name}_attendees.csv', mode='a', newline='') as file:
        writer = csv.writer(file)
        writer.writerow([attendee_name, email, rsvp_status])
    print(f"Attendee '{attendee_name}' added to event '{event_name}'!")


def view_attendees(event_name):
    if not file_exists(f'{event_name}_attendees.csv'):
        print(f"No attendees found for event '{event_name}'.")
        return

    with open(f'{event_name}_attendees.csv', mode='r') as file:
        reader = csv.reader(file)
        print(f"Attendees for '{event_name}':")
        for row in reader:
            print(row)


def remove_attendee(event_name, attendee_name):
    if not file_exists(f'{event_name}_attendees.csv'):
        print(f"No attendees file found for event '{event_name}'.")
        return

    with open(f'{event_name}_attendees.csv', mode='r') as file:
        reader = csv.reader(file)
        attendees = [row for row in reader if row[0] != attendee_name]

    with open(f'{event_name}_attendees.csv', mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerows(attendees)

    print(f"Attendee '{attendee_name}' removed from event '{event_name}'.")


def set_budget(event_name, budget):
    with open(f'{event_name}_budget.csv', mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(["Category", "Amount"])
        writer.writerow(["Total Budget", budget])
    print(f"Budget for event '{event_name}' set to {budget}.")


def record_expense(event_name, category, amount):
    with open(f'{event_name}_budget.csv', mode='a', newline='') as file:
        writer = csv.writer(file)
        writer.writerow([category, amount])
    print(f"Expense recorded for event '{event_name}' under category '{category}' with amount {amount}.")


def check_budget(event_name):
    if not file_exists(f'{event_name}_budget.csv'):
        print(f"No budget file found for event '{event_name}'.")
        return

    with open(f'{event_name}_budget.csv', mode='r') as file:
        reader = csv.reader(file)
        total_budget = 0
        expenses = 0
        for row in reader:
            if row[0] == "Total Budget":
                total_budget = float(row[1])
            elif row[0] != "Category":
                expenses += float(row[1])

    remaining_budget = total_budget - expenses
    print(f"Remaining budget for '{event_name}': {remaining_budget}")


def search_event(search_term):
    if not file_exists('events.csv'):
        print("No events found.")
        return

    with open('events.csv', mode='r') as file:
        reader = csv.reader(file)
        print("Search Results:")
        for row in reader:
            if search_term.lower() in row[0].lower() or search_term in row[2]:
                print(row)


def send_invitations(event_name):
    if not file_exists(f'{event_name}_attendees.csv'):
        print(f"No attendees file found for event '{event_name}'.")
        return

    with open(f'{event_name}_attendees.csv', mode='r') as file:
        reader = csv.reader(file)
        print(f"Sending invitations for '{event_name}':")
        for row in reader:
            print(f"Invitation sent to {row[0]} at {row[1]} with RSVP status {row[2]}.")


def main():
    while True:
        print("\nEvent Management System")
        print("1. Create Event")
        print("2. View Events")
        print("3. Delete Event")
        print("4. Add Attendee")
        print("5. View Attendees")
        print("6. Remove Attendee")
        print("7. Set Budget")
        print("8. Record Expense")
        print("9. Check Budget")
        print("10. Search Event")
        print("11. Send Invitations")
        print("12. Exit")

        choice = input("Choose an option: ")

        if choice == '1':
            event_name = input("Enter event name: ")
            event_date = input("Enter event date and time (YYYY-MM-DD HH:MM): ")
            location = input("Enter location: ")
            description = input("Enter description: ")
            create_event(event_name, event_date, location, description)
        elif choice == '2':
            read_events()
        elif choice == '3':
            event_name = input("Enter event name to delete: ")
            delete_event(event_name)
        elif choice == '4':
            event_name = input("Enter event name: ")
            attendee_name = input("Enter attendee's name: ")
            email = input("Enter attendee's email: ")
            rsvp_status = input("Enter RSVP status (Confirmed/Declined/Maybe): ")
            add_attendee(event_name, attendee_name, email, rsvp_status)
        elif choice == '5':
            event_name = input("Enter event name: ")
            view_attendees(event_name)
        elif choice == '6':
            event_name = input("Enter event name: ")
            attendee_name = input("Enter attendee's name to remove: ")
            remove_attendee(event_name, attendee_name)
        elif choice == '7':
            event_name = input("Enter event name: ")
            budget = float(input("Enter total budget: "))
            set_budget(event_name, budget)
        elif choice == '8':
            event_name = input("Enter event name: ")
            category = input("Enter expense category: ")
            amount = float(input("Enter amount: "))
            record_expense(event_name, category, amount)
        elif choice == '9':
            event_name = input("Enter event name: ")
            check_budget(event_name)
        elif choice == '10':
            search_term = input("Enter search term: ")
            search_event(search_term)
        elif choice == '11':
            event_name = input("Enter event name: ")
            send_invitations(event_name)
        elif choice == '12':
            print("Exiting the system.")
            break
        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()